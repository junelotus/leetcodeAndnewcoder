// #include <bits/stdc++.h>
// using namespace std;
// /*你打开了美了么外卖，选择了一家店，你手里有一张满X元减10元的券，
// 店里总共有n种菜，第i种菜一份需要A_i元，
// 因为你不想吃太多份同一种菜，所以每种菜你最多只能点一份，现在问你最少需要选择多少元的商品才能使用这张券。

// 第一行两个正整数n和X，分别表示菜品数量和券的最低使用价格。（1≤n≤100, 1≤X≤10000） 接下来一行n个整数，第i个整数表示第i种菜品的价格。（1≤A_i≤100）

// 5 20
// 18 19 17 6 7*/
// int minn =INT_MAX;
// void fun(vector<int> re,int begin,int sum,int m)
// {
//     if(sum>=m )
//         { 
//             if(sum<minn)
//                 minn=sum;
//             return ;
//         }
//     for(int i=begin;i<re.size();i++)
//         fun(  re,  i+1,  sum+re[i],  m);    


// }

// int main()
// {
//     int n;
//     int m;
//     cin>>n>>m;    
//     vector<int> re(n ,0);
//      int sum = 0;
//     for(int i=0;i<n;i++)
//        { cin>>re[i];
//        sum+=re[i];
//        }std::sort(re.begin(),re.end());
//     re.push_back(0);
//     vector<int> wode(1,0);
//       sum = 0;

//     while(!wode.empty() )
//     {
//         int d =wode.back();
        
//         if(sum>=m ||d==n)
//         {
//              wode.pop_back();
//                 d =wode.back();
//             if(sum>=m&&sum<minn)
//             {
               
//                 // cout<<"heh"<<endl;
//                 // for(int k=0;k<wode.size();k++)
//                 //  cout<<wode[k]<<" ";
//                 minn=sum;
//                 // cout<<"min=="<<minn<<endl;
//             } 

                 
//                d=wode.back();
//                wode.pop_back();
                
//                if(wode.empty()) break; 
                 

//                 sum-=re[d];
//                 // cout<<"nide "<<d+1<<"sum="<<sum<<endl;
//                 wode.push_back(d+1);
                 
//                 //sum+=re[wode.back()];

            
            

//         }
         
//         else{
//             sum+=re[wode.back()];
//             // cout<<"wode.back()="<<wode.back()<<"  else"<<sum<<"  re["<<wode.back()<<"]"<<re[wode.back()]<<endl;
//             wode.push_back(d+1);
            
            
                

 
//        }
//     }


      
//      cout<<minn<<endl;
//      return 0;    





// }


# include <cstdio>
# include <algorithm>
# include <cmath>
   
using namespace std;
   
int n,x;
const int maxn = 1e5+10;
int dp[maxn],a[200];
   
int main()
{
    scanf("%d %d",&n,&x);
    for(int i = 0; i < n;i++)
        scanf("%d",&a[i]);
   
    for(int i = 0;i < n;i++)
    {
        for(int j = x + a[i];j >= a[i];j--)
        {
            dp[j] = max(dp[j],dp[j-a[i]]+a[i]);
        }
    }
   
   for(int i=0;i<50;i++)
     printf("%d  ",dp[i]);
    for(int i = x;;i++)
    {
        if(dp[i] >= x) {
            printf("%d\n",i);
            break;
        }
    }
    return 0;
}